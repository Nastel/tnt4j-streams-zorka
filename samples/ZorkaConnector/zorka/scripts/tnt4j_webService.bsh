/*
 * Copyright 2014-2017 JKOOL, LLC.
 *
 * This file is part of TNT4J-Streams-Zorka.
 *
 * TNT4J-Streams-Zorka is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * TNT4J-Streams-Zorka is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with TNT4J-Streams-Zorka.  If not, see <http://www.gnu.org/licenses/>.
 */
  
zorka.require("tnt4j_base_tomcat.bsh");

__java_webs() {

    spy.add(spy.instrument("WS_TNT4J_STREAMS_INVOKER_TUBE")
        .onReturn(spy.fetchArg("PACKAGE", 1), spy.fetchArg("METHOD", 2), spy.fetchArg("ARGS", 3),
            spy.format("METHOD", "${METHOD.name}" ),
            spy.format("SOAP_ACTION", "${PACKAGE.soapAction}" ),
            tracer.begin("WS_TNT4J_STREAMS_TRACKER"),
            tracer.attr("SOAP_METHOD", "METHOD"),
            tracer.attr("SOAP_ACTION", "SOAP_ACTION"),
            tnt4j._attributeTntCorrIds()
        )
        .include(spy.byMethod(0, "com.sun.xml.ws.server.**", "invoke", "Object", null)));

    return this;
}

java_webs = __java_webs();
