/*
 * Copyright 2014-2016 JKOOL, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
  
zorka.require("tnt4j_base_tomcat.bsh");


__java_webs() {

    spy.add(spy.instrument("WS_TNT4J_STREAMS_INVOKER_TUBE")
        .onReturn( spy.fetchArg("PACKAGE", 1), spy.fetchArg("METHOD", 2), spy.fetchArg("ARGS", 3),
            spy.format("METHOD", "${METHOD.name}" ),
            spy.format("SOAP_ACTION", "${PACKAGE.soapAction}" ),
            tracer.begin("WS_TNT4J_STREAMS_TRACKER"),
            tracer.attr("SOAP_METHOD", "METHOD"),
            tracer.attr("SOAP_ACTION", "SOAP_ACTION"),
            tnt4j._attributeTntCorrIds()
        )
        .include(spy.byMethod(0, "com.sun.xml.ws.server.**", "invoke", "Object", null)));

    return this;
}

java_webs = __java_webs();
