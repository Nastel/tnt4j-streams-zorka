/*
 * Copyright 2014-2017 JKOOL, LLC.
 *
 * This file is part of TNT4J-Streams-Zorka.
 *
 * TNT4J-Streams-Zorka is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * TNT4J-Streams-Zorka is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with TNT4J-Streams-Zorka.  If not, see <http://www.gnu.org/licenses/>.
 */

zorka.require("tnt4j_base_tomcat.bsh", "ldap.bsh");

// This script gets TNT4J Correlation IDs

__tnt4j_ldap() {

    spy.add(spy.instrument("LDAP_TNT4J_STREAMS_TRACKER")
        .onEnter(spy.fetchArg("NAME", 1), spy.fetchArg("FILTER", 2),
            spy.tlGet("JK_CORR_SID", tnt4j._JK_CORR_SID),
            spy.tlGet("JK_CORR_RID", tnt4j._JK_CORR_RID),
            tracer.attr("JK_CORR_RID", "JK_CORR_RID"),
            tracer.attr("JK_CORR_SID", "JK_CORR_SID")
        )
        .include(
            spy.byMethod(0, "javax.naming.directory.InitialDirContext", "search", null, "javax.naming.Name"),
            spy.byMethod(0, "javax.naming.directory.InitialDirContext", "search", null, "String",
                "javax.naming.directory.Attributes"),
            spy.byMethod(0, "javax.naming.directory.InitialDirContext", "search", null, "String", "String",
                "javax.naming.directory.SearchControls")
        )
    );

    return this;
}
			
tnt4j_ldap = __tnt4j_ldap();