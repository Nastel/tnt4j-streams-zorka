/*
 * Copyright 2014-2019 JKOOL, LLC.
 *
 * This file is part of TNT4J-Streams-Zorka.
 *
 * TNT4J-Streams-Zorka is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * TNT4J-Streams-Zorka is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with TNT4J-Streams-Zorka.  If not, see <http://www.gnu.org/licenses/>.
 */

zorka.require ("tnt4j_comm_sql.bsh");


__mysql () {

  spy.add (sql_tnt4j._instrumentStmt ("MYSQL_1", "${THIS.connection.database}", "SERVER")
                   .include (spy.byMethod (spy.AC_PUBLIC, "com.mysql.jdbc.StatementImpl", "execut*", null, "String")));

  spy.add (sql_tnt4j._instrumentPStmt ("MYSQL_2", "${THIS.connection.database}", "${THIS.originalSql}", "SERVER")
                   .include (spy.byMethod ("com.mysql.jdbc.PreparedStatement", "execut*"),
                             spy.byMethod ("com.mysql.jdbc.JDBC4PreparedStatement", "execut*"),
                             spy.byMethod ("com.mysql.jdbc.CallableStatement", "execut*"),
                             spy.byMethod ("com.mysql.jdbc.JDBC4CallableStatement", "execut*"),
                             spy.byMethod ("com.mysql.jdbc.ServerPreparedStatement", "execut*"),
                             spy.byMethod ("com.mysql.jdbc.JDBC4ServerPreparedStatement", "execut*")));


  if (zorka.boolCfg ("tracer"))
  {
    tracer.exclude ("com.mysql.**");
  }

  return this;
}

mysql = __mysql ();