 /*
 * Copyright 2014-2016 JKOOL, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
  
zorka.require("tnt4j_base_tomcat.bsh", "jdbc/mysql.bsh");
  
// This script gets TNT4J Correlation IDs
  
__tnt4j_sql() {
  
    spy.add(
        spy.instrument("SQL_TNT4J_STREAMS_TRACKER")
            .onEnter(
                tnt4j._attributeTntCorrIds()
            )
            .onError(
                spy.fetchError("ERROR"),
                spy.format("EXCEPTION", "${ERROR}"),
                tracer.attr("ERROR", "YES"),
                tracer.attr("EXCEPTION", "EXCEPTION")
            )
		    .include(spy.byMethod("com.mysql.jdbc.PreparedStatement", "execut*"),
		        spy.byMethod("com.mysql.jdbc.JDBC4PreparedStatement", "execut*"),
		        spy.byMethod("com.mysql.jdbc.CallableStatement", "execut*"),
		        spy.byMethod("com.mysql.jdbc.JDBC4CallableStatement", "execut*"),
		        spy.byMethod("com.mysql.jdbc.ServerPreparedStatement", "execut*"),
		        spy.byMethod("com.mysql.jdbc.JDBC4ServerPreparedStatement", "execut*")));

    return this;
}
			
tnt4j_sql = __tnt4j_sql ();