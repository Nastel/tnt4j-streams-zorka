 /*
 * Copyright 2014-2016 JKOOL, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
  
zorka.require("tnt4j_base_tomcat.bsh", "javax/jms.bsh");

// Generic JMS monitoring

__javax_jms() {

    spy.add(spy.instrument("JMS_TNT4J_STREAMS_LISTENER")
        .onEnter(spy.fetchArg("MSG", 1),
            tracer.begin("JMS_TNT4J_STREAMS_TRACKER"),
            tnt4j._attributeTntCorrIds(),
            javax_jms._fetchAttrs, javax_jms._fetchText, javax_jms._fetchMap, javax_jms._fetchProps)
        .onError(spy.fetchError("ERR"), spy.strTime("TIME"), spy.markError())
        .onSubmit(spy.strTime("TIME"))
        .include(spy.byInterfaceAndMethod(0, "javax.jms.MessageListener", "onMessage", "void", "javax.jms.Message")));

    spy.add(spy.instrument("JMS_TNT4J_STREAMS_PRODUCER1")
        .onEnter(spy.fetchArg("MSG", 1),
            tracer.begin("JMS_TNT4J_STREAMS_TRACKER"),
            tnt4j._attributeTntCorrIds(),
            javax_jms._fetchAttrs, javax_jms._fetchText, javax_jms._fetchMap, javax_jms._fetchProps)
        .include(spy.byInterfaceAndMethod(0, "javax.jms.MessageProducer", "send", "void", "javax.jms.Message")));

    spy.add(spy.instrument("JMS_TNT4J_STREAMS_PRODUCER2")
        .onEnter(spy.fetchArg("MSG", 2),
            tracer.begin("JMS_TNT4J_STREAMS_TRACKER"),
            tnt4j._attributeTntCorrIds(),
            javax_jms._fetchAttrs, javax_jms._fetchText, javax_jms._fetchMap, javax_jms._fetchProps)
        .include(spy.byInterfaceAndMethod(0, "javax.jms.MessageProducer", "send", "void", "javax.jms.Destination", "javax.jms.Message")));

    spy.add(spy.instrument("JMS_TNT4J_STREAMS_CONSUMER")
        .onReturn(spy.fetchRetVal("MSG"),
            tracer.begin("JMS_TNT4J_STREAMS_TRACKER"),
            tnt4j._attributeTntCorrIds(),
            javax_jms._fetchAttrs, javax_jms._fetchText, javax_jms._fetchMap, javax_jms._fetchProps)
        .include(spy.byInterfaceAndMethod(0, "javax.jms.MessageConsumer", "~receive.*", "javax.jms.Message")));

    return this;
}

javax_jms = __javax_jms();
